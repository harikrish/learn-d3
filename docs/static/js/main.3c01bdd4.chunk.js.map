{"version":3,"sources":["components/barchart.jsx","components/barchartPart2.jsx","components/circle.jsx","components/scatterPlot/dataCircle.jsx","components/scatterPlot/axis.jsx","components/scatterPlot/scatterPlot.jsx","components/scatterPlot/chart.jsx","components/scatterPlot/index.js","App.js","serviceWorker.js","index.js"],"names":["data","x","d3","domain","range","BarChart","props","useEffect","remove","selectAll","enter","append","style","d","text","className","BarChartPart2","bar","attr","length","i","barHeight","draw","Circle","circleEnter","Math","sqrt","width","height","map","coords","index","circleProps","cx","xScale","cy","yScale","r","key","renderCircles","Axis","this","renderAxis","ax","axisVar","ticks","node","refs","axis","call","ref","transform","padding","Component","console","log","scales","styles","randomNum","floor","random","randomDataSet","Array","apply","Chart","useState","setData","Button","variant","onClick","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","paper","textAlign","color","palette","secondary","App","classes","Fragment","CssBaseline","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","Container","maxWidth","Grid","container","item","xs","Paper","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3c01bdd4.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst data = [10, 20];\n\nvar x = d3.scaleLinear()\n    .domain([0, d3.max(data)])\n    .range([0, 420]);\n\nconst draw = (props) => {\n    d3.select(\".bar-chart\")\n    .selectAll(\"div\")\n        .data(data)\n    .enter().append(\"div\")\n        .style(\"width\", function(d) { return x(d) + \"px\"; })\n        .text(function(d) { return d; });\n}\n\nconst BarChart = (props) => {\n    useEffect(() => {\n        d3.select('.bar-chart > *').remove();\n        draw(props);\n    });\n\n    return (\n        <div className=\"bar-chart\">Bar Chart</div>\n    );\n    \n};\n\nexport default BarChart;","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst data = [4, 8, 15, 16, 23, 42];\n\nconst width = 420,\n    barHeight = 20;\n\nconst x = d3.scaleLinear()\n    .domain([0, d3.max(data)])\n    .range([0, width]);\n\nconst draw = (props) => {\n    const chart = d3.select(\".bar-chart-part2\")\n        .attr(\"width\", width)\n        .attr(\"height\", barHeight * data.length);\n\n    const bar = chart.selectAll(\"g\")\n        .data(data)\n        .enter().append(\"g\")\n        .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * barHeight + \")\"; });\n\n    bar.append(\"rect\")\n        .attr(\"width\", x)\n        .attr(\"height\", barHeight - 1);\n\n    bar.append(\"text\")\n        .attr(\"x\", function(d) { return x(d) - 3; })\n        .attr(\"y\", barHeight / 2)\n        .attr(\"dy\", \".35em\")\n        .text(function(d) { return d; });\n}\n\nconst BarChartPart2 = (props) => {\n    useEffect(() => {\n        d3.select('.bar-chart-part2 > *').remove();\n        draw(props);\n    });\n\n    return (\n        <div>\n            Bar Chart Part 2\n            <div>\n                <svg className=\"bar-chart-part2\"></svg>\n            </div>\n        </div>\n    );\n    \n};\n\nexport default BarChartPart2;","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst draw = () => {\n    const svg = d3.select(\".circle\");\n\n    const circle = svg.selectAll(\"circle\")\n        .data([32, 57, 112, 293]);\n\n    const circleEnter = circle.enter().append(\"circle\");\n    circleEnter.attr(\"cy\", 60);\n    circleEnter.attr(\"cx\", function(d, i) { return i * 100 + 30; });\n    circleEnter.attr(\"r\", function(d) { return Math.sqrt(d); });\n};\n\nconst Circle = () => {\n    useEffect(() => {\n        d3.select('.circle > *').remove();\n        draw();\n    });\n\n    return (\n        <div>\n            Circle\n            <div>\n                <svg className=\"circle\" width=\"720\" height=\"120\">\n                </svg>\n            </div>\n        </div>\n    );\n}\n\nexport default Circle;","import React from 'react';\n\nconst renderCircles = (props) => {\n  return (coords, index) => {\n    const circleProps = {\n      cx: props.xScale(coords[0]),\n      cy: props.yScale(coords[1]),\n      r: 2,\n      key: index\n    };\n    return <circle {...circleProps} />;\n  };\n};\n\nexport default (props) => {\n  return <g>{ props.data.map(renderCircles(props)) }</g>\n}","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nexport default class Axis extends Component {\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis() {\n    if (this.props.ax === 'x') {\n      var axisVar = d3.axisBottom(this.props.xScale).ticks(5);\n    } else if (this.props.ax === 'y') {\n      var axisVar = d3.axisLeft(this.props.yScale).ticks(5);\n    }\n\n    var node = this.refs.axis;\n    d3.select(node).call(axisVar);\n  }\n\n  render() {\n    return (\n      <g\n        className={this.props.ax === 'x' ? 'xAxis' : 'yAxis'}\n        ref=\"axis\"\n        transform={\n          this.props.ax === 'x'\n            ? `translate(0, ${this.props.height - this.props.padding})`\n            : `translate(${this.props.padding}, 0)`\n        }\n      />\n    );\n  }\n}","import React from 'react';\nimport * as d3 from 'd3';\n\nimport DataCircle from './dataCircle';\nimport Axis       from './axis';\n\n// Returns the largest X coordinate from the data set\nconst xMax = (data) => d3.max(data, (d) => d[0]);\n\n// Returns the higest Y coordinate from the data set\nconst yMax = (data) => d3.max(data, (d) => d[1]);\n\n// Returns a function that \"scales\" X coordinates from the data to fit the chart\nconst xScale = (props) => {\n    return d3.scaleLinear()\n        .domain([0, xMax(props.data)])\n        .range([props.padding, props.width - props.padding * 2]);\n};\n\n// Returns a function that \"scales\" Y coordinates from the data to fit the chart\nconst yScale = (props) => {\n    return d3.scaleLinear()\n        .domain([0, yMax(props.data)])\n        .range([props.height - props.padding, props.padding]);\n};\n\nexport default (props = []) => {\n    console.log('props', props);\n    const scales = { xScale: xScale(props), yScale: yScale(props) };\n    return (\n        <svg width={props.width} height={props.height}>\n            <DataCircle {...props} {...scales} />\n            <Axis ax={'x'} {...props} {...scales} />\n            <Axis ax={'y'} {...props} {...scales} />\n        </svg>\n    );\n}","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport ScatterPlot from './scatterPlot';\n\nconst styles = {\n    width   : 500,\n    height  : 300,\n    padding : 30,\n  };\n\n// The number of data points for the chart.\nconst numDataPoints = 50;\n\n// A function that returns a random number from 0 to 1000\nconst randomNum     = () => Math.floor(Math.random() * 1000);\n\n// A function that creates an array of 50 elements of (x, y) coordinates.\nconst randomDataSet = () => {\n  return Array.apply(null, {length: numDataPoints}).map(() => [randomNum(), randomNum()]);\n}\n\nconst Chart = () => {\n    const [data, setData] = useState({data: randomDataSet()});\n\n    const randomizeData = () => {\n        setData({data: randomDataSet()});\n    }\n\n    return (\n        <div>\n            Scatter Plot\n            <div>\n                <div>\n                    <ScatterPlot {...data } {...styles}/>\n                </div>\n                <Button variant=\"contained\" onClick={randomizeData}>\n                    Randomize Data\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nexport default Chart;","import Chart from './chart';\n\nexport default Chart;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport './App.css';\n\nimport BarChart from './components/barchart';\nimport BarChartPart2 from './components/barchartPart2';\nimport Circle from './components/circle';\nimport ScatterPlot from './components/scatterPlot';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Learn D3\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Container maxWidth=\"sm\">\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <BarChart />\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n              <BarChartPart2 />\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n              <Circle />\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n              <ScatterPlot />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </React.Fragment>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}